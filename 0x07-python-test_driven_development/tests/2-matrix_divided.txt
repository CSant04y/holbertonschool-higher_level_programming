The ``2-matrix_divided.py`` module
======================

Using ``matrix_divided``
------------------

First import ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test: Passing all postive numbers with a postive div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test: Passing all Negative numbers with neg div
    >>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], -3) 
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test: passing in one float for matirx and a negative int for div
    >>> matrix_divided([[15.7]], -2)
    [[-7.85]]

test: passing all floats in the matrix with postive divisor
    >>> matrix_divided([[1.56, 3.25, 1.89], [1.73, 1.62, 1.88]], 3)
    [[0.52, 1.08, 0.63], [0.58, 0.54, 0.63]]

test: passing all postive ints for matrix and testing for char passed to div
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

test: with one integer and b set to 98
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

test: how function handles rows of different lengths
    >>> matrix_divided([[1, 2, 3], [4, 8, 7, 9], [2]], 1.5)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

test: how function handles strings in matrix
    >>> matrix_divided([["holberton"], ["school"]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test: Passing no argument to div
    >>> matrix_divided([[1, 2, 3]], [4, 8, 7, 9])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
