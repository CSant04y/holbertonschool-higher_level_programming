The ``3-say_my_name.py`` module
======================

Using ``say_my_name``
------------------

First import ``say_my_name``

    >>> say_my_name = __import__('3-say_my_name').say_my_name

test: empty string arguments for str1 and str2
::
    >>> say_my_name("cat", "Dog")
    My name is cat Dog

test: 1 string and no string
::
    >>> say_my_name("cat")
    My name is cat 

failures
=============================

test: no strings are passed
::
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

test: when integers are passed
::
    >>> say_my_name(16, 28)
    Traceback (most recent call last):
    TypeError: first_name must be a string

test: when one integer is passed with string
::
    >>> say_my_name(8, "cat")
    Traceback (most recent call last):
    TypeError: first_name must be a string

test: when list with string is passed
::
    >>> say_my_name([cat], [dog])
    Traceback (most recent call last):
    NameError: name 'cat' is not defined

test: Testing boolen values "True" in quotes
::
    >>> say_my_name(True, True)
    Traceback (most recent call last):
    TypeError: first_name must be a string

test: Testing boolen values "True" for str2
::
    >>> say_my_name("dog", True)
    Traceback (most recent call last):
    TypeError: last_name must be a string

test: Testing None in place of values
::
    >>> say_my_name(None, "cat")
    Traceback (most recent call last):
    TypeError: first_name must be a string
